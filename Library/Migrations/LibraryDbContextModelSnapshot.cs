// <auto-generated />
using Library.DbContex;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.EntityModel.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Autors");
                });

            modelBuilder.Entity("Library.EntityModel.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Library.EntityModel.BookInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Book_Id")
                        .HasColumnType("int");

                    b.Property<int>("Page")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Book_Id")
                        .IsUnique();

                    b.ToTable("BookInfos");
                });

            modelBuilder.Entity("Library.EntityModel.Book_Mkitxveli", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<int>("MkitxveliID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookID");

                    b.HasIndex("MkitxveliID");

                    b.ToTable("Book_Mkitxvelis");
                });

            modelBuilder.Entity("Library.EntityModel.Mkitxveli", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PiradiNomeri")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Mkitxvelis");
                });

            modelBuilder.Entity("Library.EntityModel.Book", b =>
                {
                    b.HasOne("Library.EntityModel.Autor", "Book_Autor")
                        .WithMany("Autor_Books")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book_Autor");
                });

            modelBuilder.Entity("Library.EntityModel.BookInfo", b =>
                {
                    b.HasOne("Library.EntityModel.Book", "Booki")
                        .WithOne("Book_Info")
                        .HasForeignKey("Library.EntityModel.BookInfo", "Book_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booki");
                });

            modelBuilder.Entity("Library.EntityModel.Book_Mkitxveli", b =>
                {
                    b.HasOne("Library.EntityModel.Book", "Book_book")
                        .WithMany("Mkitxveli_book")
                        .HasForeignKey("BookID");

                    b.HasOne("Library.EntityModel.Mkitxveli", "Mkitxveli_Mkitxveli")
                        .WithMany("Book_mkitxveli")
                        .HasForeignKey("MkitxveliID");

                    b.Navigation("Book_book");

                    b.Navigation("Mkitxveli_Mkitxveli");
                });

            modelBuilder.Entity("Library.EntityModel.Autor", b =>
                {
                    b.Navigation("Autor_Books");
                });

            modelBuilder.Entity("Library.EntityModel.Book", b =>
                {
                    b.Navigation("Book_Info")
                        .IsRequired();

                    b.Navigation("Mkitxveli_book");
                });

            modelBuilder.Entity("Library.EntityModel.Mkitxveli", b =>
                {
                    b.Navigation("Book_mkitxveli");
                });
#pragma warning restore 612, 618
        }
    }
}
